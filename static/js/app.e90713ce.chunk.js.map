{"version":3,"sources":["constant/index.ts","api/client.ts","components/text/index.tsx","components/card-food/index.tsx","components/input/index.tsx","components/button/index.tsx","components/categories/category.tsx","components/categories/data.ts","components/categories/index.tsx","components/more/index.tsx","components/list-food/index.tsx","screens/home/title.tsx","screens/home/search.tsx","screens/home/new-foods.tsx","screens/home/index.tsx","screens/detail/index.tsx","screens/categories/category.tsx","screens/categories/index.tsx","screens/categorie-child/index.tsx","screens/search/search-box.tsx","screens/search/index.tsx","routers/index.tsx","App.tsx","web-build/register-service-worker.js","assets/an-sang.jpg","assets/an-trua.png","assets/an-toi.jpg"],"names":["URLS","COLORS","FONTS","SIZES","Math","round","Dimensions","get","width","height","httpLink","createHttpLink","uri","link","setContext","_","a","async","headers","AsyncStorage","getItem","token","authorization","concat","cache","InMemoryCache","client","ApolloClient","memo","children","type","size","style","Text","lineHeight","fontSize","fontFamily","styles","StyleSheet","create","card","overflow","img","backgroundColor","borderRadius","text_wrap","paddingVertical","text","food","navigation","useNavigation","View","TouchableOpacity","onPress","navigate","title","id","Image","source","recipeImage","props","TextInput","ButtonCus","Button","box","flexDirection","alignItems","margin","borderColor","borderWidth","wrap_text","paddingHorizontal","category","categoriesList","require","Categories","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","map","key","wrap","More","Entypo","name","color","padding","button","ListFoods","dishs","loading","page","pages","loadMore","total","handleLoadMore","paddingTop","FlatList","data","renderItem","item","flex","keyExtractor","numColumns","ActivityIndicator","length","display","icon","marginLeft","marginRight","Search","AntDesign","NEW_DISH_QUERY","gql","NewFoods","flexGrow","useState","setPage","setDishs","useMutation","getDishs","useEffect","variables","then","wrap_section","paddingBottom","section","center","justifyContent","HomeScreen","moveToCategories","SafeAreaView","DISH_QUERY","content","position","top","left","right","borderTopStartRadius","borderTopEndRadius","marginBottom","section_title","border","borderBottomColor","borderBottomWidth","borderStyle","dot","marginTop","DetailsScreen","route","useRoute","setOptions","params","useQuery","dish","resizeMode","description","ingredients","i","steps","step","index","imgs","CardCategory","cates","CATEGORIES_QUERY","console","log","categories","CategorieChild","search","back","input","SearchBox","onSearch","changeText","debounce","string","goBack","placeholder","onChangeText","SEARCH_DISHS","SearchScreen","searchDishs","setText","undefined","Stack","createStackNavigator","Routers","NavigationContainer","Navigator","initialRouteName","Screen","component","options","header","DetailScreen","App","useFonts","Quicksand_400Regular","Quicksand_600SemiBold","AppLoading","navigator","window","addEventListener","serviceWorker","register","scope","info","catch","error","module","exports"],"mappings":"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","file":"static/js/app.e90713ce.chunk.js","sourcesContent":["import { Dimensions } from 'react-native';\n\n// url\nconst isProduct = process.env.NODE_ENV === 'production';\nconst apiUrl = !isProduct\n  ? 'http://localhost:8080'\n  : 'https://apicook.herokuapp.com';\n\nconst URLS = {\n  api: apiUrl,\n};\n\n// color\nconst COLORS = {\n  blue: '#034694',\n  yellow: '#DBA111',\n  red: '#ED1C24',\n  light: '#D1D3D4',\n};\n\n// font\nconst FONTS = {\n  FONT_FAMILY_REGULAR: 'Quicksand_400Regular',\n  FONT_FAMILY_SEMIBOLD: 'Quicksand_600SemiBold',\n  FONT_SIZE_REGULAR: 15,\n};\n\n// size\nconst SIZES = {\n  SPACE: 15,\n  BORDER_RADIUS: 5,\n  WIDTH_SCREEN: Math.round(Dimensions.get('window').width),\n  HEIGHT_SCREEN: Math.round(Dimensions.get('window').height),\n};\n\nexport { FONTS, SIZES, COLORS, URLS };\n","import { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { AsyncStorage } from 'react-native';\nimport { URLS } from '../constant';\n\nconst httpLink = createHttpLink({\n  uri: `${URLS.api}/graphql`,\n});\n\nconst authLink = setContext(async (_, { headers }) => {\n  // get the authentication token from local storage if it exists\n\n  const token = await AsyncStorage.getItem('token');\n\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: `Bearer ${token}`,\n    },\n  };\n});\n\nconst link = authLink.concat(httpLink);\n\nexport const cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  link,\n  cache,\n});\n\nexport default client;\n","import React, { FC, ReactNode, memo } from 'react';\nimport { Text } from 'react-native';\nimport { FONTS } from '../../constant';\n\ninterface Props {\n  children: ReactNode;\n  type?: 'bold' | 'reglar';\n  size?: 'reglar' | 'small' | 'large';\n  style?: any;\n}\n\nconst TextCus: FC<Props> = ({\n  children,\n  type = 'reglar',\n  size = 'reglar',\n  style,\n}) => {\n  const fontFamily = (): string => {\n    switch (type) {\n      case 'bold':\n        return 'Quicksand_600SemiBold';\n      default:\n        return 'Quicksand_400Regular';\n    }\n  };\n\n  const fontSize = (): number => {\n    switch (size) {\n      case 'small':\n        return 12;\n      default:\n        return FONTS.FONT_SIZE_REGULAR;\n    }\n  };\n\n  return (\n    <Text\n      style={{\n        lineHeight: 20,\n        fontSize: fontSize(),\n        fontFamily: fontFamily(),\n        ...style,\n      }}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport default memo(TextCus);\n","import { useNavigation } from '@react-navigation/native';\nimport React, { FC, memo } from 'react';\nimport { Image, StyleSheet, TouchableOpacity, View } from 'react-native';\n\nimport { Text } from '..';\n\ninterface Props {\n  food: any;\n  style?: any;\n}\n\nconst CardFood: FC<Props> = ({ food, style }) => {\n  const navigation = useNavigation();\n\n  const clickMe = () => {\n    navigation.navigate('Detail', {\n      title: food.title,\n      id: food.id,\n    });\n  };\n\n  return (\n    <View style={[styles.card, style]}>\n      <TouchableOpacity onPress={clickMe}>\n        <Image\n          style={styles.img}\n          source={{\n            uri: food.recipeImage,\n          }}\n        />\n      </TouchableOpacity>\n\n      <View style={styles.text_wrap}>\n        <Text type=\"bold\" style={styles.text}>\n          {food.title}\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    overflow: 'hidden',\n  },\n  img: {\n    backgroundColor: '#eee',\n    height: 170,\n    borderRadius: 10,\n  },\n  text_wrap: {\n    paddingVertical: 10,\n  },\n  text: {},\n});\n\nexport default memo(CardFood);\n","import React, { FC, memo } from 'react';\nimport { TextInput } from 'react-native';\n\nconst Input: FC<any> = ({ style, ...props }) => {\n  return (\n    <TextInput\n      {...props}\n      style={[style, { fontFamily: 'Quicksand_600SemiBold' }]}\n    />\n  );\n};\n\nexport default memo(Input);\n","import React, { FC } from 'react';\nimport { Button } from 'react-native';\n\nconst ButtonCus: FC<any> = ({ style, ...props }) => {\n  return (\n    <Button\n      {...props}\n      style={[style, { fontFamily: 'Quicksand_600SemiBold' }]}\n    />\n  );\n};\n\nexport default ButtonCus;\n","import React, { memo, FC } from 'react';\nimport { View, StyleSheet, Image, TouchableOpacity } from 'react-native';\nimport { Text } from '..';\nimport { Category as CategoryType } from './type';\nimport { useNavigation } from '@react-navigation/native';\n\ninterface Props {\n  category: CategoryType;\n}\n\nconst Category: FC<Props> = ({ category }) => {\n  const navigation = useNavigation();\n\n  const handlePress = () => navigation.navigate('Categories');\n\n  return (\n    <TouchableOpacity onPress={handlePress}>\n      <View style={styles.box}>\n        <View>\n          <Image style={styles.img} source={category.img} />\n        </View>\n        <View style={styles.wrap_text}>\n          <Text style={{ fontSize: 16 }} type=\"bold\">\n            {category.title}\n          </Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  box: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderRadius: 5,\n    backgroundColor: '#fff',\n    margin: 5,\n    overflow: 'hidden',\n    borderColor: '#eee',\n    borderWidth: 1,\n  },\n\n  wrap_text: {\n    paddingHorizontal: 10,\n  },\n\n  text: {\n    fontSize: 12,\n  },\n\n  img: {\n    height: 60,\n    width: 60,\n    backgroundColor: '#eee',\n  },\n});\n\nexport default memo(Category);\n","import { Category } from './type';\n\nconst categoriesList: Category[] = [\n  {\n    id: 'an-sang',\n    title: 'Ăn sáng',\n    img: require('../../assets/an-sang.jpg'),\n  },\n  {\n    id: 'an-trua',\n    title: 'Ăn trưa',\n    img: require('../../assets/an-trua.png'),\n  },\n  {\n    id: 'an-toi',\n    title: 'Ăn tối',\n    img: require('../../assets/an-toi.jpg'),\n  },\n];\n\nexport { categoriesList };\n","import React from 'react';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport Category from './category';\n\nimport { categoriesList } from './data';\n\nfunction Categories() {\n  return (\n    <ScrollView\n      horizontal\n      showsHorizontalScrollIndicator={false}\n      contentContainerStyle={{ paddingHorizontal: 10 }}\n    >\n      {categoriesList.map((category) => (\n        <Category key={category.id} category={category} />\n      ))}\n    </ScrollView>\n  );\n}\n\nexport default Categories;\n","import React, { FC } from 'react';\nimport { Entypo } from '@expo/vector-icons';\nimport { View, StyleSheet } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { SIZES } from '../../constant';\n\ninterface Props {\n  onPress: () => void;\n}\n\nconst More: FC<Props> = ({ onPress }) => {\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <View style={styles.wrap}>\n        <Entypo name=\"chevron-small-right\" size={20} color=\"black\" />\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  wrap: {\n    backgroundColor: '#eee',\n    paddingHorizontal: 3,\n    borderRadius: SIZES.BORDER_RADIUS,\n  },\n});\n\nexport default More;\n","import React, { FC } from 'react';\nimport { ActivityIndicator, FlatList, StyleSheet, View } from 'react-native';\n\nimport { Button, CardFood, Text } from '..';\nimport { SIZES, COLORS } from '../../constant';\n\ninterface Props {\n  loading: boolean;\n  dishs: any[];\n  page?: number;\n  pages?: number;\n  loadMore: (page: number) => void;\n  total?: number;\n}\n\nconst ListFoods: FC<Props> = ({\n  dishs,\n  loading,\n  page = 1,\n  pages = 1,\n  loadMore,\n  total = 0,\n}) => {\n  const handleLoadMore = () => {\n    loadMore(page);\n  };\n\n  const renderAction = () => {\n    if (loading) {\n      return (\n        <View>\n          <ActivityIndicator />\n        </View>\n      );\n    }\n    if (dishs.length === 0 || pages === page) return <View />;\n\n    return (\n      <View style={styles.button}>\n        <Button title=\"Xem thêm\" onPress={handleLoadMore} />\n      </View>\n    );\n  };\n\n  return (\n    <View>\n      {total > 0 && (\n        <View style={{ paddingHorizontal: 15, paddingTop: 15 }}>\n          <Text\n            style={{ color: COLORS.blue }}\n            type=\"bold\"\n          >{`${total} món ăn được tìm thấy`}</Text>\n        </View>\n      )}\n\n      <FlatList\n        contentContainerStyle={styles.wrap}\n        data={dishs || []}\n        renderItem={({ item }) => (\n          <View style={styles.card}>\n            <CardFood food={item} style={{ flex: 1 }} />\n          </View>\n        )}\n        keyExtractor={(item: any) => item.id}\n        numColumns={2}\n      />\n      {renderAction()}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  wrap: {\n    padding: 5,\n  },\n  card: {\n    width: (SIZES.WIDTH_SCREEN - 10) / 2,\n    padding: 10,\n  },\n  button: {\n    padding: 15,\n  },\n});\n\nexport default ListFoods;\n","import React, { memo, ReactNode, FC } from 'react';\nimport { Text } from '../../components';\nimport { COLORS } from '../../constant';\n\nconst Title: FC<{ children: ReactNode }> = ({ children }) => {\n  return (\n    <Text\n      type=\"bold\"\n      style={{\n        fontSize: 17,\n        color: COLORS.blue,\n      }}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport default memo(Title);\n","import { AntDesign } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport React from 'react';\nimport { StyleSheet, TouchableOpacity, View } from 'react-native';\n\nimport { Text } from '../../components';\nimport { SIZES } from '../../constant';\n\nconst Search = () => {\n  const navigation = useNavigation();\n  const gotoSearch = () => navigation.navigate('SearchScreen');\n\n  return (\n    <TouchableOpacity onPress={gotoSearch}>\n      <View style={styles.wrap}>\n        <View style={styles.icon}>\n          <AntDesign name=\"search1\" size={20} color=\"#333\" />\n        </View>\n        <View>\n          <Text type=\"bold\">Tìm kiếm</Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst HEIGHT = 35;\n\nconst styles = StyleSheet.create({\n  wrap: {\n    backgroundColor: '#eee',\n    width: SIZES.WIDTH_SCREEN - 30,\n    height: HEIGHT,\n    borderRadius: 5,\n    flexDirection: 'row',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    marginLeft: 10,\n    marginRight: 15,\n  },\n});\n\nexport default Search;\n","import { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport React, { useEffect, useState } from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport { ListFood } from '../../components';\nimport { SIZES } from '../../constant';\n\nconst NEW_DISH_QUERY = gql`\n  mutation getDishs($page: Float!) {\n    getDishs(page: $page) {\n      dishs {\n        id\n        recipeImage\n        title\n      }\n      page\n      pages\n    }\n  }\n`;\n\nconst NewFoods = () => {\n  const [page, setPage] = useState(1);\n  const [dishs, setDishs] = useState([]);\n  const [getDishs, { loading }] = useMutation(NEW_DISH_QUERY);\n\n  const loadMore = () => {\n    getDishs({\n      variables: { page },\n    }).then(({ data }: { data: any }): void => {\n      setDishs([...dishs, ...data.getDishs.dishs]);\n      setPage(page + 1);\n    });\n  };\n\n  useEffect(() => {\n    getDishs({\n      variables: { page },\n    }).then(({ data }: { data: any }): void => {\n      setDishs(data.getDishs.dishs);\n    });\n  }, []);\n\n  return (\n    <ListFood page={page} loading={loading} dishs={dishs} loadMore={loadMore} />\n  );\n};\n\nconst styles = StyleSheet.create({\n  wrap: {\n    padding: 5,\n    flexGrow: 1,\n  },\n  card: {\n    width: (SIZES.WIDTH_SCREEN - 10) / 2,\n    padding: 10,\n  },\n  button: {\n    padding: 15,\n  },\n});\n\nexport default NewFoods;\n","import React from 'react';\nimport { View, StyleSheet, SafeAreaView } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport Title from './title';\nimport Suggestions from './suggestions';\nimport Search from './search';\nimport NewFoods from './new-foods';\nimport { Categories, More } from '../../components';\n\nfunction HomeScreen({ navigation }: any) {\n  const moveToCategories = () => {\n    navigation.navigate('Categories');\n  };\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <ScrollView\n        style={{ backgroundColor: '#fff', flex: 1 }}\n        contentContainerStyle={{\n          flex: 1,\n          backgroundColor: '#fff',\n        }}\n      >\n        <View style={[styles.section, styles.wrap_section, { paddingTop: 15 }]}>\n          <Search />\n        </View>\n\n        <View style={styles.wrap_section}>\n          <View style={[styles.section, styles.center, { paddingBottom: 5 }]}>\n            <Title>Danh mục</Title>\n            <More onPress={moveToCategories} />\n          </View>\n          <Categories />\n        </View>\n\n        {/* <View style={styles.wrap_section}>\n          <View style={styles.section}>\n            <Title>Gợi ý</Title>\n          </View>\n\n          <Suggestions />\n        </View>\n\n        <View style={styles.wrap_section}>\n          <View style={[styles.section, styles.center, { paddingBottom: 5 }]}>\n            <Title>Yêu thích</Title>\n            <More onPress={moveToCategories} />\n          </View>\n\n          <Suggestions />\n        </View> */}\n\n        <View style={styles.wrap_section}>\n          <View style={[styles.section, styles.center, { paddingBottom: 5 }]}>\n            <Title>Món mới</Title>\n            <More onPress={moveToCategories} />\n          </View>\n\n          <NewFoods />\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrap_section: {\n    paddingBottom: 20,\n  },\n  paddingBottom: {\n    paddingBottom: 10,\n  },\n  section: {\n    paddingHorizontal: 15,\n    flexDirection: 'row',\n  },\n  center: {\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n});\n\nexport default HomeScreen;\n","import { useQuery } from '@apollo/react-hooks';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { gql } from 'apollo-boost';\nimport React, { FC } from 'react';\nimport {\n  ActivityIndicator,\n  FlatList,\n  Image,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nimport { Text } from '../../components';\nimport { COLORS } from '../../constant';\n\nconst DISH_QUERY = gql`\n  query dish($id: String!) {\n    dish(id: $id) {\n      id\n      recipeImage\n      title\n      description\n      ingredients\n      steps {\n        imgs\n        text\n      }\n    }\n  }\n`;\n\nconst DetailsScreen: FC = () => {\n  const navigation = useNavigation();\n  const route = useRoute<any>();\n\n  navigation.setOptions({ title: route.params.title });\n\n  const { data, loading } = useQuery(DISH_QUERY, {\n    variables: { id: route.params.id },\n  });\n\n  if (loading) {\n    return (\n      <View\n        style={[\n          styles.wrap,\n          { alignItems: 'center', justifyContent: 'center' },\n        ]}\n      >\n        <ActivityIndicator />\n      </View>\n    );\n  }\n  if (!data)\n    return (\n      <View\n        style={[\n          styles.wrap,\n          { alignItems: 'center', justifyContent: 'center' },\n        ]}\n      >\n        <Text>No dish</Text>\n      </View>\n    );\n\n  const { dish } = data;\n\n  return (\n    <View style={styles.wrap}>\n      <ScrollView>\n        <Image\n          style={styles.img}\n          source={{\n            uri: dish.recipeImage,\n          }}\n          resizeMode=\"cover\"\n        />\n\n        <View style={styles.content}>\n          <View style={styles.top} />\n          <View style={[styles.section, styles.border]}>\n            <Text\n              style={{\n                fontSize: 20,\n                marginBottom: 15,\n                lineHeight: 25,\n                color: COLORS.blue,\n              }}\n              type=\"bold\"\n            >\n              {dish.title}\n            </Text>\n            {dish.description.length > 0 && <Text>{dish.description}</Text>}\n          </View>\n\n          <View style={[styles.section, styles.border]}>\n            <Text type=\"bold\" style={{ marginBottom: 10 }}>\n              Nguyên liệu:\n            </Text>\n            {dish.ingredients.map((i: string) => (\n              <View style={{ marginBottom: 7, flexDirection: 'row' }} key={i}>\n                <View style={[styles.dot]} />\n                <View style={{ flex: 1 }}>\n                  <Text key={i}>{i}</Text>\n                </View>\n              </View>\n            ))}\n          </View>\n\n          <View style={[styles.section]}>\n            <Text type=\"bold\" style={{ marginBottom: 10 }}>\n              Cách làm:\n            </Text>\n            {dish.steps.map((step: any, index: number) => (\n              <View\n                key={step.text}\n                style={{ marginBottom: 10, flexDirection: 'row' }}\n              >\n                <View style={[styles.dot]} />\n                <View style={{ flex: 1 }}>\n                  <Text style={{ marginBottom: 7 }}>{step.text}</Text>\n\n                  <FlatList\n                    data={step.imgs}\n                    horizontal\n                    renderItem={({ item }: { item: string }) => {\n                      return (\n                        <Image\n                          key={item}\n                          style={{\n                            height: 120,\n                            width: 120,\n                            borderRadius: 10,\n                            marginRight: 10,\n                          }}\n                          source={{\n                            uri: item,\n                          }}\n                          resizeMode=\"cover\"\n                        />\n                      );\n                    }}\n                    keyExtractor={(item) => item}\n                  />\n                </View>\n              </View>\n            ))}\n          </View>\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst size_dot = 8;\n\nconst styles = StyleSheet.create({\n  wrap: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  img: {\n    height: 300,\n  },\n  content: {\n    position: 'relative',\n    backgroundColor: '#fff',\n  },\n  top: {\n    position: 'absolute',\n    top: -30,\n    left: 0,\n    right: 0,\n    backgroundColor: '#fff',\n    height: 30,\n    borderTopStartRadius: 20,\n    borderTopEndRadius: 20,\n  },\n\n  section: {\n    marginBottom: 10,\n    paddingHorizontal: 15,\n    paddingBottom: 15,\n  },\n\n  section_title: {\n    marginBottom: 5,\n  },\n\n  border: {\n    borderBottomColor: COLORS.light,\n    borderBottomWidth: 1,\n    borderStyle: 'dashed',\n  },\n\n  dot: {\n    height: size_dot,\n    width: size_dot,\n    borderRadius: size_dot,\n    backgroundColor: COLORS.yellow,\n    marginRight: 10,\n    marginTop: 7,\n  },\n});\n\nexport default DetailsScreen;\n","import React, { FC } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\n\nimport { Text } from '../../components';\n\nconst CardCategory: FC<any> = ({ category }) => {\n  return (\n    <View style={styles.wrap}>\n      <View style={styles.title}>\n        <Text type=\"bold\">{category.title}</Text>\n      </View>\n\n      <FlatList\n        data={category.cates}\n        renderItem={({ item }: any) => (\n          <View style={styles.title}>\n            <Text>{item}</Text>\n          </View>\n        )}\n        keyExtractor={(item: string) => item}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  wrap: {\n    borderBottomColor: '#eee',\n    borderBottomWidth: 1,\n  },\n  title: {\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n  },\n});\n\nexport default CardCategory;\n","import { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport React from 'react';\nimport { Text } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\n\nimport Category from './category';\n\nconst CATEGORIES_QUERY = gql`\n  query categories {\n    categories {\n      title\n      cates\n    }\n  }\n`;\n\nfunction Categories() {\n  const { data, loading } = useQuery(CATEGORIES_QUERY);\n\n  if (loading) return <Text>Loading</Text>;\n\n  console.log(data);\n\n  return (\n    <FlatList\n      contentContainerStyle={{ backgroundColor: '#fff' }}\n      data={data.categories}\n      renderItem={({ item }: any) => <Category category={item} />}\n      keyExtractor={(category: any) => category.title}\n    />\n  );\n}\n\nexport default Categories;\n","import React from 'react';\nimport { Text } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nfunction CategorieChild() {\n  return (\n    <ScrollView>\n      <Text>CategorieChild Screen</Text>\n    </ScrollView>\n  );\n}\n\nexport default CategorieChild;\n","import { AntDesign } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { debounce } from 'lodash';\nimport React, { FC } from 'react';\nimport { StyleSheet, TouchableOpacity, View } from 'react-native';\nimport { Input } from '../../components';\n\ninterface Props {\n  onSearch: (text: string) => void;\n}\n\nconst SearchBox: FC<Props> = ({ onSearch }) => {\n  const navigation = useNavigation();\n\n  const onBack = () => {\n    navigation.goBack();\n  };\n\n  const changeText = debounce((string: string) => {\n    if (string.length > 0) {\n      onSearch(string);\n    }\n  }, 300);\n\n  return (\n    <View style={styles.wrap}>\n      <TouchableOpacity style={[styles.back]} onPress={onBack}>\n        <AntDesign name=\"arrowleft\" size={20} color=\"#333\" />\n      </TouchableOpacity>\n      <View style={styles.search}>\n        <Input\n          placeholder=\"Search food...\"\n          style={styles.input}\n          onChangeText={changeText}\n        />\n        <View style={styles.button}>\n          <AntDesign name=\"search1\" size={20} color=\"#333\" />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  wrap: {\n    padding: 15,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  search: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderColor: '#eee',\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderRadius: 10,\n    position: 'relative',\n  },\n  back: {\n    height: 45,\n    width: 30,\n    justifyContent: 'center',\n    borderRadius: 10,\n  },\n  input: {\n    flex: 1,\n    height: 45,\n    paddingHorizontal: 15,\n    borderColor: '#fff',\n  },\n  button: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    height: 45,\n    width: 45,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default SearchBox;\n","import { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport React, { useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { ListFood } from '../../components';\nimport SearchBox from './search-box';\n\nconst SEARCH_DISHS = gql`\n  mutation searchDishs($text: String!) {\n    searchDishs(text: $text) {\n      dishs {\n        title\n        id\n        recipeImage\n      }\n      page\n      pages\n      total\n    }\n  }\n`;\n\nfunction SearchScreen() {\n  const [page, setPage] = useState(1);\n  const [searchDishs, { data, loading }] = useMutation(SEARCH_DISHS);\n  const [text, setText] = useState<string>('');\n\n  const searchFood = (string: string) => {\n    setText(string);\n    searchDishs({\n      variables: {\n        text: string,\n      },\n    }).then(() => {\n      setPage(1);\n    });\n  };\n\n  const loadMore = () => {\n    searchDishs({\n      variables: { text },\n    }).then((): void => {\n      setPage(page + 1);\n    });\n  };\n\n  const dishs = data ? data.searchDishs.dishs : [];\n  const total = data ? data.searchDishs.total : undefined;\n\n  return (\n    <View style={styles.wrap}>\n      <SearchBox onSearch={searchFood} />\n      <View style={{ flex: 1 }}>\n        <ListFood\n          dishs={dishs}\n          page={page}\n          loadMore={loadMore}\n          loading={loading}\n          total={total}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrap: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n});\n\nexport default SearchScreen;\n","import React from 'react';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport HomeScreen from '../screens/home';\nimport DetailScreen from '../screens/detail';\nimport Categories from '../screens/categories';\nimport CategorieChild from '../screens/categorie-child';\nimport SearchScreen from '../screens/search';\n\nconst Stack = createStackNavigator();\n\nfunction Routers() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen\n          name=\"Home\"\n          component={HomeScreen}\n          options={() => ({\n            header: () => null,\n          })}\n        />\n        <Stack.Screen name=\"Detail\" component={DetailScreen} />\n        <Stack.Screen name=\"Categories\" component={Categories} />\n        <Stack.Screen name=\"CategorieChild\" component={CategorieChild} />\n        <Stack.Screen\n          name=\"SearchScreen\"\n          component={SearchScreen}\n          options={() => ({\n            header: () => null,\n          })}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default Routers;\n","import React from 'react';\n\nimport { ApolloProvider } from '@apollo/react-hooks';\n\nimport { useFonts } from '@use-expo/font';\nimport { AppLoading } from 'expo';\nimport {\n  Quicksand_400Regular,\n  Quicksand_600SemiBold,\n} from '@expo-google-fonts/quicksand';\n\nimport client from './api/client';\nimport Routers from './routers';\n\nexport default function App() {\n  let [fontsLoaded] = useFonts({\n    Quicksand_400Regular,\n    Quicksand_600SemiBold,\n  });\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  }\n\n  return (\n    <ApolloProvider client={client}>\n      <Routers />\n    </ApolloProvider>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/cookapp/expo-service-worker.js', { scope: '/cookapp/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/an-sang.9da58588.jpg\";","module.exports = __webpack_public_path__ + \"static/media/an-trua.d0ff5dd1.png\";","module.exports = __webpack_public_path__ + \"static/media/an-toi.f989c8e1.jpg\";"],"sourceRoot":""}